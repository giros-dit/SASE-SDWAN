<?xml version="1.0" encoding="UTF-8"?>

<!--

~~~~~~~~~~~~~~~~~~~~
VNX SD-WAN scenario
~~~~~~~~~~~~~~~~~~~~

Name:        sdw_edge
Description: Virtualized SD-WAN Edge equipment based on OpenFlow

This file is part of the Virtual Networks over LinuX (VNX) Project distribution. 
(www: http://www.dit.upm.es/vnx - e-mail: vnx@dit.upm.es) 

Departamento de Ingenieria de Sistemas Telematicos (DIT)
Universidad Politecnica de Madrid
SPAIN

-->


<vnx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="/usr/share/xml/vnx/vnx-2.00.xsd">
  <global>
    <version>2.0</version>
    <scenario_name>sdw_p1</scenario_name>
    <automac offset="4"/>
    <vm_mgmt type="none" />
    <!--vm_mgmt type="private" network="10.250.0.0" mask="24" offset="12">
       <host_mapping />
    </vm_mgmt--> 
    <vm_defaults>
        <console id="0" display="no"/>
        <console id="1" display="yes"/>
    </vm_defaults>
  </global>
    
  <net name="lan1" mode="virtual_bridge" />
  <net name="lan11" mode="veth" type="p2p"/>
  <net name="lan12" mode="veth" type="p2p"/>
  <net name="wan1" mode="veth" type="p2p"/>
  <net name="lan2" mode="virtual_bridge" />
  <net name="lan21" mode="veth" type="p2p"/>
  <net name="lan22" mode="veth" type="p2p"/>
  <net name="wan2" mode="veth" type="p2p"/>
  <net name="wan0" mode="virtual_bridge" />
  <net name="int1" mode="virtual_bridge" />
  <net name="int2" mode="virtual_bridge" />
  <net name="int3" mode="virtual_bridge" />

  <net name="virbr0" mode="virtual_bridge" managed="no"/>

  <vm name="h11" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="lan1">
        <ipv4>10.20.1.2/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
    </exec>
    <route type="ipv4" gw="10.20.1.1">default</route>
  </vm>   

  <vm name="h21" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="lan2">
        <ipv4>10.20.2.2/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
    </exec>
    <route type="ipv4" gw="10.20.2.1">default</route>
  </vm>   
  <vm name="r1" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="lan1">
        <ipv4>10.20.1.1/24</ipv4>
    </if>
    <if id="2" net="lan11">
        <ipv4>10.20.0.1/24</ipv4>
    </if>
    <if id="3" net="lan12">
        <ipv4>192.168.120.3/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
    </exec>
    <forwarding type="ip" />
    <route type="ipv4" gw="10.20.0.2">10.20.2.0/24</route>
    <route type="ipv4" gw="192.168.120.1">0.0.0.0/0</route>
  </vm>   
  <vm name="r2" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="lan2">
        <ipv4>10.20.2.1/24</ipv4>
    </if>
    <if id="2" net="lan21">
        <ipv4>10.20.0.2/24</ipv4>
    </if>
    <if id="3" net="lan22">
        <ipv4>192.168.120.3/24</ipv4>
    </if>
    <exec seq="on_boot" type="verbatim">
       # Change interfaces MTU
       ifconfig eth1 mtu 1400
       sed -i -e '/iface eth1 inet static/a \   mtu 1400' /etc/network/interfaces
    </exec>
    <forwarding type="ip" />
    <route type="ipv4" gw="10.20.0.1">10.20.1.0/24</route>
    <route type="ipv4" gw="192.168.120.1">0.0.0.0/0</route>
  </vm>   
  <vm name="sdedge1" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="wan0">
    </if>
    <if id="2" net="wan1">
    </if>
    <if id="3" net="lan11">
    </if>
    <if id="4" net="lan12">
    </if>
    <filetree seq="on_boot" root="/root/" perms="755">simple_switch_13.py</filetree>
    <filetree seq="on_boot" root="/root/" perms="755">ryu-50.sh</filetree>
    <exec seq="on_boot" type="verbatim">
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br1
        ovs-vsctl add-port br1 eth2
        ovs-vsctl add-port br1 eth4
        ip addr add 192.168.120.2/24 dev br1
        ip link set br1 up
        ip route add 0.0.0.0/0 via 192.168.120.1 
        ovs-vsctl add-br br0
        ovs-vsctl set bridge br0 other-config:hwaddr=00:00:00:00:00:01
        ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000001
        ovs-vsctl set-fail-mode br0 secure
        ovs-vsctl set-controller br0 tcp:127.0.0.1
        ovs-vsctl add-port br0 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=10.100.1.2
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 eth3
        ip link add veth0 type veth peer name veth1
        ifconfig veth0 up
        ifconfig veth1 up
        ovs-vsctl add-port br0 veth0
        ovs-vsctl add-port br1 veth1
    </exec>
  </vm>
  <vm name="sdedge2" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="wan0">
    </if>
    <if id="2" net="wan2">
    </if>
    <if id="3" net="lan21">
    </if>
    <if id="4" net="lan22">
    </if>
    <filetree seq="on_boot" root="/root/" perms="755">simple_switch_13.py</filetree>
    <filetree seq="on_boot" root="/root/" perms="755">ryu-50.sh</filetree>
    <exec seq="on_boot" type="verbatim">
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br1
        ovs-vsctl add-port br1 eth2
        ovs-vsctl add-port br1 eth4
        ip addr add 192.168.120.2/24 dev br1
        ip link set br1 up
        ip route add 0.0.0.0/0 via 192.168.120.1 
        ovs-vsctl add-br br0
        ovs-vsctl set-fail-mode br0 secure
        ovs-vsctl set bridge br0 other-config:hwaddr=00:00:00:00:00:01
        ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000001
        ovs-vsctl set-controller br0 tcp:127.0.0.1
        ovs-vsctl add-port br0 vxlan1 -- set interface vxlan1 type=vxlan options:remote_ip=10.100.1.1
        ovs-vsctl add-port br0 eth1
        ovs-vsctl add-port br0 eth3
        ip link add veth0 type veth peer name veth1
        ifconfig veth0 up
        ifconfig veth1 up
        ovs-vsctl add-port br0 veth0
        ovs-vsctl add-port br1 veth1
    </exec>
  </vm>
  <vm name="nat1" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="wan1">
        <ipv4>192.168.120.1/24</ipv4>
    </if>
    <if id="2" net="int1">
        <ipv4>10.100.1.1/24</ipv4>
    </if>
    <filetree seq="on_boot" root="/usr/bin/" perms="755">/usr/bin/vnx_config_nat</filetree>
    <exec seq="on_boot" type="verbatim">
       /usr/bin/vnx_config_nat eth1 eth2
       iptables -t nat -A PREROUTING -p udp -d 10.100.1.1 --dport 4789 -j DNAT --to-destination 192.168.120.2
       iptables -t nat -A PREROUTING -p tcp -d 10.100.1.1 --dport 8080 -j DNAT --to-destination 192.168.120.2
    </exec>
    <forwarding type="ip" />
    <route type="ipv4" gw="192.168.120.3">10.20.1.0/24</route>
    <route type="ipv4" gw="10.100.1.254">default</route>
  </vm>
  <vm name="nat2" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="wan2">
        <ipv4>192.168.120.1/24</ipv4>
    </if>
    <if id="2" net="int2">
        <ipv4>10.100.1.2/24</ipv4>
    </if>
    <filetree seq="on_boot" root="/usr/bin/" perms="755">/usr/bin/vnx_config_nat</filetree>
    <exec seq="on_boot" type="verbatim">
       /usr/bin/vnx_config_nat eth1 eth2
       iptables -t nat -A PREROUTING -p udp -d 10.100.1.2 --dport 4789 -j DNAT --to-destination 192.168.120.2
       iptables -t nat -A PREROUTING -p tcp -d 10.100.1.2 --dport 8080 -j DNAT --to-destination 192.168.120.2
    </exec>
    <forwarding type="ip" />
    <route type="ipv4" gw="192.168.120.3">10.20.2.0/24</route>
    <route type="ipv4" gw="10.100.1.254">default</route>
  </vm>
  <vm name="isp" type="lxc" exec_mode="lxc-attach" arch="x86_64">
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <if id="1" net="int1">
    </if>
    <if id="2" net="int2">
    </if>
    <if id="3" net="int3">
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <forwarding type="ip" />
    <filetree seq="on_boot" root="/usr/bin/" perms="755">/usr/bin/vnx_config_nat</filetree>
    <exec seq="on_boot" type="verbatim">
        service openvswitch-switch start
        sleep 5
        ovs-vsctl add-br br1
        ovs-vsctl add-port br1 eth1
        ovs-vsctl add-port br1 eth2
        ovs-vsctl add-port br1 eth3
        ip addr add 10.100.1.254/24 dev br1
        ip link set br1 up
        /usr/bin/vnx_config_nat br1 eth9
    </exec>
  </vm>
  <host>
    <hostif net="int3">
        <ipv4>10.100.1.99/24</ipv4>
    </hostif>
  </host>

</vnx>
